<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:RomanArabicUI.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Width="500" Height="350" CanResize="False"
        x:Class="RomanArabicUI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="RomanArabicUI">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <StackPanel>
        <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Click="OpenAbout"/>
            </MenuItem>
        </Menu>
        </DockPanel>
        <Border Margin="10" CornerRadius="10" Background="LightBlue">
            <TextBlock Margin="5" FontSize="24" HorizontalAlignment="Center" Text="Roman Arabic Converter UI">
            </TextBlock>
        </Border>
        <Grid ShowGridLines="True"  Margin="10" 
        ColumnDefinitions="120, 150" 
        RowDefinitions="Auto, Auto, Auto">
        <Label Grid.Row="0" Grid.Column="0" Margin="10">Roman(I, II, V)</Label>
        <TextBox Grid.Row="0" Grid.Column="1" Margin="0 5" Text="I" Name="roman"/>
        <Label Grid.Row="1" Grid.Column="0" Margin="10">Arabic(1, 2, 5)</Label>
        <!-- <TextBox Grid.Row="1"  Grid.Column="1" Margin="0 5" Text="1" Name="arabic"/> -->
        <NumericUpDown Grid.Row="1"  Grid.Column="1" Margin="0 5" Value="1" FormatString="0" Name="arabic" />
        <CheckBox Grid.Row="2" Grid.Column="0" Margin="0 5" Name="toRoman">Convert To Roman </CheckBox>
        <Button Grid.Row="2" Grid.Column="1" Margin="0 5" Click="ButtonClicked">Calculate</Button>
        </Grid>
    </StackPanel>
</Window>
